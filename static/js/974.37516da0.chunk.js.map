{"version":3,"file":"static/js/974.37516da0.chunk.js","mappings":"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","sources":["redux/contacts/selectors.js","components/ContactForm/ContactForm.styled.jsx","components/ContactForm/ContactForm.jsx","components/Modal/Modal.styled.jsx","components/Modal/Modal.jsx","components/ContactList/ContactList.styled.jsx","components/ContactList/ContactList.jsx","components/Filter/Filter.styled.jsx","components/Filter/Filter.jsx","pages/Contacts/ContactsPage.styled.jsx","pages/Contacts/ContactsPage.jsx"],"sourcesContent":["import { createSelector } from '@reduxjs/toolkit';\n\nexport const selectItems = state => state.contacts.items; // Всі контакти зі стейта Store\nexport const selectIsLoading = state => state.contacts.isLoading;\nexport const selectError = state => state.contacts.error;\nexport const selectFilter = state => state.filter;\n\n// Сортування контактів за алфавітом\nexport const selectSortedContacts = state => {\n  const sortedContacts = [...state.contacts.items].sort((a, b) =>\n    a.name.localeCompare(b.name)\n  );\n  return sortedContacts;\n};\n\n// Фільтрація відсортованих контактів за значенням фільтра\nexport const selectFilteredContacts = createSelector(\n  [selectSortedContacts, selectFilter],\n  (contacts, filter) =>\n    contacts.filter(contact =>\n      contact.name.toLowerCase().includes(filter.toLowerCase())\n    )\n);\n\n// Фільтрація контактів за значенням фільтра\n// export const selectFilteredContacts = createSelector(\n//   [selectItems, selectFilter],\n//   (contacts, filter) =>\n//     contacts.filter(contact =>\n//       contact.name.toLowerCase().includes(filter.toLowerCase())\n//     )\n// );\n","import styled from 'styled-components';\n\nexport const Form = styled.form`\n  display: flex;\n  gap: 25px;\n  flex-direction: column;\n  padding: 30px;\n\n  border: 1px solid #62ada0;\n  border-radius: 6px;\n  box-shadow: 0 0 10px rgba(0, 0, 0, 0.5);\n`;\n\nexport const FormInput = styled.input`\n  width: 300px;\n  font-size: 14px;\n  padding: 4px;\n`;\n\nexport const FormLabel = styled.label`\n  display: flex;\n  align-items: center;\n  justify-content: space-between;\n  gap: 30px;\n\n  font-size: 16px;\n  font-weight: 500;\n`;\n\nexport const FormBtn = styled.button`\n  cursor: pointer;\n\n  display: flex;\n  gap: 8px;\n  justify-content: center;\n  align-items: center;\n\n  margin: 0 auto;\n  margin-top: 6px;\n\n  width: 100%;\n  max-width: 140px;\n  height: 30px;\n  padding: 2px 5px;\n\n  color: #fff;\n  background-color: #62ada0;\n  font-size: 14px;\n  font-weight: 700;\n\n  border: none;\n  border-radius: 6px;\n  box-shadow: rgba(0, 0, 0, 0.24) 10px 10px 5px 0px;\n\n  transition: color 250ms cubic-bezier(0.4, 0, 0.2, 1),\n    background-color 250ms cubic-bezier(0.4, 0, 0.2, 1),\n    box-shadow 250ms cubic-bezier(0.4, 0, 0.2, 1);\n\n  &:hover {\n    color: #010101;\n    background-color: #c8e9e3;\n    box-shadow: rgb(255, 255, 255) -2px -2px 5px,\n      rgba(0, 0, 0, 0.24) 2px 2px 5px;\n  }\n`;\n","import React, { useState } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { selectItems } from '../../redux/contacts/selectors';\nimport { addContact } from '../../redux/contacts/contactsOperations';\nimport { toast } from 'react-toastify';\nimport { HiOutlineUserAdd } from 'react-icons/hi';\nimport { Form, FormLabel, FormInput, FormBtn } from './ContactForm.styled';\n\nconst ContactForm = () => {\n  const [name, setName] = useState('');\n  const [number, setNumber] = useState('');\n\n  const dispatch = useDispatch(); // Хук для відправлення action\n  const contacts = useSelector(selectItems); // Отримуємо всі контакти зі стейта Store\n\n  // Відповідає за оновлення стану (контрольований інпут)\n  const handleChange = evt => {\n    const { name, value } = evt.currentTarget;\n    switch (name) {\n      case 'name':\n        setName(value);\n        break;\n      case 'number':\n        setNumber(value);\n        break;\n      default:\n        break;\n    }\n  };\n\n  // Викликається під час відправлення форми\n  const handleSubmit = evt => {\n    evt.preventDefault();\n    const isAdded = contacts.find(\n      contact => contact.name.toLowerCase() === name.toLowerCase()\n    );\n    if (isAdded) {\n      return toast.error(`${name} is already in contacts.`);\n    }\n\n    const newContact = { name: name, number: number }; // Cтворення нового контакту\n    // Відправлення action addContact\n    dispatch(addContact(newContact));\n    resetForm(); // Очистка форми\n  };\n\n  const resetForm = () => {\n    setName('');\n    setNumber('');\n  };\n\n  return (\n    <Form onSubmit={handleSubmit}>\n      <FormLabel>\n        Name:\n        <FormInput\n          type=\"text\"\n          name=\"name\"\n          pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\n          title=\"Name may contain only letters, apostrophe, dash and spaces. For example Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan\"\n          required\n          value={name}\n          onChange={handleChange}\n        />\n      </FormLabel>\n\n      <FormLabel>\n        Number:\n        <FormInput\n          type=\"tel\"\n          name=\"number\"\n          pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\n          title=\"Phone number must be digits and can contain spaces, dashes, parentheses and can start with +\"\n          required\n          value={number}\n          onChange={handleChange}\n        />\n      </FormLabel>\n\n      <FormBtn type=\"submit\">\n        <HiOutlineUserAdd />\n        Add contact\n      </FormBtn>\n    </Form>\n  );\n};\n\nexport default ContactForm;\n","import styled from 'styled-components';\n\nexport const ModalBackdrop = styled.div`\n  // z-index: 999;\n  position: fixed;\n  top: 0;\n  left: 0;\n  width: 100vw;\n  height: 100vh;\n  background-color: rgba(0, 0, 0, 0.5);\n`;\n\nexport const ModalContent = styled.div`\n  position: absolute;\n  top: 50%;\n  left: 50%;\n  transform: translate(-50%, -50%);\n  min-height: 180px;\n  max-width: 320px;\n  width: 100%;\n  padding: 12px;\n  background-color: #fff;\n  border-radius: 3px;\n  box-shadow: 0px 2px 1px -1px rgba(0, 0, 0, 0.2),\n    0px 1px 1px 0px rgba(0, 0, 0, 0.14), 0px 1px 3px 0px rgba(0, 0, 0, 0.12);\n`;\n","import { createPortal } from 'react-dom';\nimport { useEffect } from 'react';\nimport { ModalBackdrop, ModalContent } from './Modal.styled';\n\n// Портал - DOM-вузол, в який буде рендеритися модальне вікно\nconst modalRoot = document.querySelector('#modal-root');\n\nconst Modal = ({ children, onClose }) => {\n  // Закриття модалки по ESC\n  useEffect(() => {\n    const handleKeyDown = event => {\n      if (event.code === 'Escape') {\n        onClose();\n      }\n    };\n\n    window.addEventListener('keydown', handleKeyDown);\n\n    return () => {\n      window.removeEventListener('keydown', handleKeyDown);\n    };\n  }, [onClose]);\n\n  // Закриття модалки по кліку на backdrop\n  // target - на чому клікнули\n  // currentTarget - на чому спрацював обробник подій\n  const handleBackdropClick = event => {\n    if (event.target === event.currentTarget) {\n      onClose();\n    }\n  };\n\n  return createPortal(\n    <ModalBackdrop onClick={handleBackdropClick}>\n      <ModalContent>{children}</ModalContent>\n    </ModalBackdrop>,\n    modalRoot\n  );\n};\n\nexport default Modal;\n","import styled from 'styled-components';\n\nexport const ContactsList = styled.ul`\n  max-width: 100%;\n  width: 720px;\n\n  display: flex;\n  gap: 10px;\n  flex-direction: column;\n`;\n\nexport const ContactItem = styled.li`\n  display: flex;\n  justify-content: space-between;\n  align-items: center;\n\n  background-color: #f4efef;\n  padding: 2px 16px;\n\n  transition: transform 250ms cubic-bezier(0.4, 0, 0.2, 1);\n\n  &:hover {\n    transform: scale(1.01);\n  }\n`;\n\nexport const Span = styled.span`\n  display: flex;\n  gap: 4px;\n  justify-content: space-between;\n  align-items: center;\n`;\n\nexport const WrapBtn = styled.div`\n  display: flex;\n  gap: 12px;\n  justify-content: space-between;\n  align-items: center;\n`;\n\nexport const Btn = styled.button`\n  cursor: pointer;\n\n  display: flex;\n  gap: 4px;\n  justify-content: center;\n  align-items: center;\n\n  width: 75px;\n  height: 26px;\n  padding: 2px 8px;\n\n  color: #fff;\n  background-color: #62ada0;\n  font-size: 14px;\n  font-weight: 500;\n\n  border: none;\n  border-radius: 6px;\n  box-shadow: rgba(0, 0, 0, 0.24) 5px 5px 5px 0px;\n\n  transition: color 250ms cubic-bezier(0.4, 0, 0.2, 1),\n    background-color 250ms cubic-bezier(0.4, 0, 0.2, 1),\n    box-shadow 250ms cubic-bezier(0.4, 0, 0.2, 1);\n\n  &:hover {\n    color: #010101;\n    background-color: #c8e9e3;\n    box-shadow: rgb(255, 255, 255) -2px -2px 5px,\n      rgba(0, 0, 0, 0.24) 2px 2px 5px;\n  }\n`;\n\n// Стилі модального вікна\nexport const ModalTitle = styled.h2`\n  text-align: center;\n  padding-bottom: 20px;\n`;\n\nexport const ModalForm = styled.form`\n  display: flex;\n  gap: 16px;\n  flex-direction: column;\n`;\n\nexport const ModalInput = styled.input`\n  width: 225px;\n  font-size: 14px;\n  padding: 4px;\n`;\n\nexport const ModalLabel = styled.label`\n  display: flex;\n  align-items: center;\n  justify-content: space-between;\n  gap: 10px;\n\n  font-size: 16px;\n  font-weight: 500;\n`;\n\nexport const WrapModalBtn = styled.div`\n  margin-top: 6px;\n  display: flex;\n  gap: 16px;\n  justify-content: center;\n  align-items: center;\n`;\n\nexport const ModalBtn = styled.button`\n  cursor: pointer;\n\n  width: 80px;\n  height: 30px;\n  padding: 2px 5px;\n\n  color: #fff;\n  background-color: #62ada0;\n  font-size: 14px;\n  font-weight: 700;\n\n  border: none;\n  border-radius: 6px;\n  box-shadow: rgba(0, 0, 0, 0.24) 10px 10px 5px 0px;\n\n  transition: color 250ms cubic-bezier(0.4, 0, 0.2, 1),\n    background-color 250ms cubic-bezier(0.4, 0, 0.2, 1),\n    box-shadow 250ms cubic-bezier(0.4, 0, 0.2, 1);\n\n  &:hover {\n    color: #010101;\n    background-color: #c8e9e3;\n    box-shadow: rgb(255, 255, 255) -2px -2px 5px,\n      rgba(0, 0, 0, 0.24) 2px 2px 5px;\n  }\n`;\n","import { useState } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { selectFilteredContacts } from '../../redux/contacts/selectors';\nimport {\n  deleteContact,\n  updateContact,\n} from '../../redux/contacts/contactsOperations';\nimport Modal from '../Modal';\nimport { FaUser, FaPhone } from 'react-icons/fa';\nimport { AiFillEdit, AiFillDelete } from 'react-icons/ai';\nimport {\n  ContactsList,\n  ContactItem,\n  Span,\n  WrapBtn,\n  Btn,\n  ModalTitle,\n  ModalForm,\n  ModalLabel,\n  ModalInput,\n  WrapModalBtn,\n  ModalBtn,\n} from './ContactList.styled';\n\nconst ContactList = () => {\n  // Записуємо в стейт контакт (subName, subNumber, subId) для редагування\n  const [subName, setSubName] = useState('');\n  const [subNumber, setSubNumber] = useState('');\n  const [subId, setSubId] = useState(null);\n  const [isModalOpen, setIsModalOpen] = useState(false);\n  const dispatch = useDispatch();\n  const filteredContacts = useSelector(selectFilteredContacts);\n\n  const handleDeleteContact = contactId => {\n    dispatch(deleteContact(contactId));\n  };\n\n  // Відкрити модалку з контактом для редагування\n  const showModal = (name, number, id) => {\n    setSubNumber(number);\n    setSubName(name);\n    setSubId(id);\n    setIsModalOpen(true);\n  };\n\n  // Відправити редагований контакт на бекенд і закрити модалку\n  const handleSave = () => {\n    setIsModalOpen(false);\n    dispatch(updateContact({ id: subId, name: subName, number: subNumber }));\n  };\n\n  // Закрити модалку\n  const handleCancel = () => {\n    setIsModalOpen(false);\n  };\n\n  return (\n    <>\n      <ContactsList>\n        {filteredContacts.map(({ id, name, number }) => (\n          <ContactItem key={id}>\n            <Span>\n              <FaUser color=\"#c8e9e3\" /> {name}:\n            </Span>\n            <Span>\n              <FaPhone color=\"#c8e9e3\" /> {number}\n            </Span>\n            <WrapBtn>\n              <Btn type=\"button\" onClick={() => showModal(name, number, id)}>\n                <AiFillEdit />\n                Edit\n              </Btn>\n              <Btn type=\"button\" onClick={() => handleDeleteContact(id)}>\n                <AiFillDelete />\n                Delete\n              </Btn>\n            </WrapBtn>\n          </ContactItem>\n        ))}\n\n        {!filteredContacts?.length && <div>No contacts found.</div>}\n      </ContactsList>\n\n      {/* Модальне вікно для редагування контакту */}\n      {isModalOpen && (\n        <Modal onClose={handleCancel}>\n          <ModalTitle>Edit this contact</ModalTitle>\n          <ModalForm>\n            <ModalLabel>\n              Name:\n              <ModalInput\n                type=\"text\"\n                name=\"name\"\n                value={subName}\n                onChange={e => {\n                  setSubName(e.target.value);\n                }}\n              />\n            </ModalLabel>\n            <ModalLabel>\n              Number:\n              <ModalInput\n                type=\"tel\"\n                name=\"number\"\n                value={subNumber}\n                onChange={e => {\n                  setSubNumber(e.target.value);\n                }}\n              />\n            </ModalLabel>\n            <WrapModalBtn>\n              <ModalBtn type=\"button\" onClick={handleSave}>\n                Save\n              </ModalBtn>\n              <ModalBtn type=\"button\" onClick={handleCancel}>\n                Cancel\n              </ModalBtn>\n            </WrapModalBtn>\n          </ModalForm>\n        </Modal>\n      )}\n    </>\n  );\n};\n\nexport default ContactList;\n","import styled from 'styled-components';\n\nexport const FilterBlock = styled.div``;\n\nexport const FilterLabel = styled.label`\n  display: flex;\n  flex-direction: column;\n  align-items: flex-start;\n  gap: 10px;\n\n  font-size: 16px;\n  font-weight: 500;\n`;\n\nexport const FilterInput = styled.input`\n  width: 250px;\n  margin-bottom: 20px;\n  font-size: 14px;\n  padding: 4px;\n`;\n","import { useDispatch, useSelector } from 'react-redux';\nimport { setFilter } from '../../redux/contacts/filterSlice';\nimport { selectFilter } from '../../redux/contacts/selectors';\nimport { FilterBlock, FilterLabel, FilterInput } from './Filter.styled';\n\nconst Filter = () => {\n  const dispatch = useDispatch();\n  const filter = useSelector(selectFilter);\n\n  const handleChange = evt => {\n    const valueFilter = evt.currentTarget.value.trim();\n    dispatch(setFilter(valueFilter));\n  };\n\n  return (\n    <FilterBlock>\n      <FilterLabel>\n        Find contacts by name\n        <FilterInput\n          type=\"text\"\n          placeholder=\"Search...\"\n          value={filter}\n          onChange={handleChange}\n        />\n      </FilterLabel>\n    </FilterBlock>\n  );\n};\n\nexport default Filter;\n","import styled from 'styled-components';\n\nexport const Container = styled.section`\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n\n  font-size: 16px;\n`;\n\nexport const Title = styled.h1`\n  margin: 30px 0 20px;\n`;\n\nexport const Subtitle = styled.h2`\n  margin: 30px 0 20px;\n`;\n\nexport const AmountContacts = styled.div`\n  margin-bottom: 20px;\n  font-size: 18px;\n  font-weight: 500;\n`;\n\nexport const ContactsNum = styled.span`\n  padding: 2px 8px;\n  background-color: #f4efef;\n`;\n\nexport const Message = styled.p`\n  font-size: 18px;\n  font-weight: 500;\n  padding: 40px 60px;\n  background-color: #f4efef;\n`;\n","import { useEffect } from 'react';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { fetchContacts } from '../../redux/contacts/contactsOperations';\nimport {\n  selectItems,\n  selectIsLoading,\n  selectError,\n} from '../../redux/contacts/selectors';\nimport ContactForm from '../../components/ContactForm';\nimport ContactList from '../../components/ContactList';\nimport Filter from '../../components/Filter';\nimport { ToastContainer } from 'react-toastify';\nimport 'react-toastify/dist/ReactToastify.css';\nimport {\n  Container,\n  Title,\n  Subtitle,\n  AmountContacts,\n  ContactsNum,\n  Message,\n} from './ContactsPage.styled';\n\nconst ContactsPage = () => {\n  const dispatch = useDispatch();\n  const contacts = useSelector(selectItems); // Отримуємо всі контакти зі стейта Store\n  const error = useSelector(selectError);\n  const isLoading = useSelector(selectIsLoading);\n\n  useEffect(() => {\n    dispatch(fetchContacts());\n  }, [dispatch]);\n\n  return (\n    <Container>\n      <Title>PhoneBook</Title>\n      <ContactForm />\n\n      <Subtitle>Contacts</Subtitle>\n      <AmountContacts>\n        All contacts in the phonebook:{' '}\n        <ContactsNum>{contacts.length}</ContactsNum>\n      </AmountContacts>\n\n      {contacts.length > 0 ? (\n        <>\n          <Filter />\n          <ContactList />\n        </>\n      ) : (\n        <Message>Contact list is empty</Message>\n      )}\n\n      {isLoading && !error && <b>Request in progress...</b>}\n      {error && error}\n\n      <ToastContainer autoClose={2000} position=\"top-center\" theme=\"colored\" />\n    </Container>\n  );\n};\n\nexport default ContactsPage;\n"],"names":["selectItems","state","contacts","items","selectIsLoading","isLoading","selectError","error","selectFilter","filter","selectFilteredContacts","createSelector","_toConsumableArray","sort","a","b","name","localeCompare","contact","toLowerCase","includes","Form","styled","_templateObject","_taggedTemplateLiteral","FormInput","_templateObject2","FormLabel","_templateObject3","FormBtn","_templateObject4","_useState","useState","_useState2","_slicedToArray","setName","_useState3","_useState4","number","setNumber","dispatch","useDispatch","useSelector","handleChange","evt","_evt$currentTarget","currentTarget","value","resetForm","_jsxs","onSubmit","preventDefault","find","toast","concat","newContact","addContact","children","_jsx","type","pattern","title","required","onChange","HiOutlineUserAdd","ModalBackdrop","ModalContent","modalRoot","document","querySelector","_ref","onClose","useEffect","handleKeyDown","event","code","window","addEventListener","removeEventListener","createPortal","onClick","target","ContactsList","ContactItem","Span","WrapBtn","Btn","_templateObject5","ModalTitle","_templateObject6","ModalForm","_templateObject7","ModalInput","_templateObject8","ModalLabel","_templateObject9","WrapModalBtn","_templateObject10","ModalBtn","_templateObject11","subName","setSubName","subNumber","setSubNumber","_useState5","_useState6","subId","setSubId","_useState7","_useState8","isModalOpen","setIsModalOpen","filteredContacts","handleCancel","_Fragment","map","id","FaUser","color","FaPhone","showModal","AiFillEdit","contactId","deleteContact","AiFillDelete","length","Modal","e","updateContact","FilterBlock","FilterLabel","FilterInput","placeholder","valueFilter","trim","setFilter","Container","Title","Subtitle","AmountContacts","ContactsNum","Message","fetchContacts","ContactForm","Filter","ContactList","ToastContainer","autoClose","position","theme"],"sourceRoot":""}